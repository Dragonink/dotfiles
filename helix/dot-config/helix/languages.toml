use-grammars = { only = ["numbat"] }

# Rust
[[language]]
name = "rust"
[language.indent]
unit = "\t"
tab-width = 4
[language-server.rust-analyzer.config.cargo]
features = "all"
[language-server.rust-analyzer.config.check]
command = "clippy"
[language-server.rust-analyzer.config.imports]
prefix = "self"

# Zig
[language-server.zls.config]
enable_build_on_save = true

# Python
[[language]]
name = "python"
language-servers = ["pylyzer", "ruff"]
auto-format = true
[language.indent]
unit = "\t"
tab-width = 4
[language.formatter]
command = "ruff"
args = ["format", "--quiet", "-"]
[language-server.ruff]
command = "ruff"
args = ["server"]

# Numbat
[[language]]
name = "numbat"
language-id = "numbat"
scope = "source.numbat"
injection-regex = "nbt|numbat"
file-types = ["nbt"]
comment-token = "#"
[[grammar]]
name = "numbat"
source = { git = "https://github.com/irevoire/tree-sitter-numbat", rev = "main" }

# Typst
[[language]]
name = "typst"
language-servers = ["tinymist", "ltex-plus"]
[language.formatter]
command = "typstyle"
[language-server.tinymist.config]
exportPdf = "onSave"
formatterMode = "typstyle"

# Brioche
[[language]]
name = "brioche"
language-id = "typescript"
scope = "source.brioche"
injection-regex = "bri(oche)?"
file-types = ["bri"]
grammar = "typescript"
comment-tokens = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["brioche"]
[language.indent]
unit = "\t"
tab-width = 4
[language-server.brioche]
command = "brioche"
args = ["lsp", "--stdio"]


# LTeX+
[language-server.ltex-plus]
command = "ltex-ls-plus"
