#!/bin/bash
set -euo pipefail

argv0='vercmp-devel'
XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
AURDEST="${AURDEST:-$XDG_CACHE_HOME/aurutils/sync}"
source "$(realpath "$(dirname "${BASH_SOURCE[0]}")")/.lib.bash"

LIBMAKEPKG_UTIL_SOURCE_SH=''
LIBMAKEPKG_UTIL_MESSAGE_SH=''
source "${MAKEPKG_LIBRARY:-/usr/share/makepkg}/util/source.sh"


tmp="$(prepare_tmp "$argv0")"
trap 'rm --recursive --force "$tmp"' EXIT

cd "$AURDEST"

#Â Pull commits from source repositories
touch "$tmp/args"
while read -r pkg; do
	echo "$pkg" >> "$tmp/args"
	source "$pkg/PKGBUILD"
	for src in "${source[@]}"; do
		src="$(get_filename "$src")"
		git -C "$pkg/$src" pull > /dev/null
	done
done

# Retrieve a list of local VCS packages
aur repo --list "$@" > "$tmp/db"

# Update version for each VCS package
aur vercmp --path <(xargs --no-run-if-empty --arg-file "$tmp/args" aur srcver) < "$tmp/db"
