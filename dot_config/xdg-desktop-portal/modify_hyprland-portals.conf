#!/usr/bin/env -S nu --include-path ~/.local/share/nushell/vendor/autoload --stdin

source to-ini.nu


def "from portals-conf" []: string -> record {
  $in
  | from ini
  | items {|section, assocs| {$section: (
    $assocs
    | items {|interface, portals| {$interface: (
      $portals
      | split row ';'
      | where { is-not-empty }
    )}}
    | into record
  )}}
  | into record
}

def "to portals-conf" []: record -> string {
  $in
  | items {|section, assocs| {$section: (
    $assocs
    | items {|interface, portals| {$interface: (
      $portals
      | str join ';'
    )}}
    | into record
  )}}
  | into record
  | to ini
}

def "from portal" []: string -> record<portal: record<DBusName: string, Interfaces: list<string>>> {
  $in
  | from ini
  | update portal.Interfaces { split row ';' | where { is-not-empty } }
}

def find-xdg-data [...path: string]: nothing -> path {
  $env.XDG_DATA_DIRS? | default [/usr/local/share, /usr/share]
  | prepend ($env.XDG_DATA_HOME? | default ($env.HOME | path join '.local' 'share'))
  | each { path join ...$path }
  | where { path exists }
  | first
} 

def prefer-portal [portal: string]: record -> record<preferred: record> {
  $in | merge deep {
    'preferred': (
      find-xdg-data 'xdg-desktop-portal' 'portals' $'($portal).portal'
      | open
      | get portal.Interfaces
      | each {|interface| {$interface: $portal}}
      | into record
    )
  }
}

def main [] {
  $in
  | from portals-conf
  | merge deep {
    'preferred': {
      'default': ['hyprland', 'gtk'],
    }
  }
  | prefer-portal kitty
  | to portals-conf
}
