#!/usr/bin/env -S nu --include-path ~/.local/share/nushell/vendor/autoload --stdin

use to-ini.nu *

def "to portals-conf" []: record<preferred: record> -> string {
	$in
	| items {|section, assocs| {$section: (
		$assocs
		| items {|interface, portals| {$interface: ($portals | str join ';')}}
		| into record
	)}}
	| into record
	| to ini
}

def "from portal" []: string -> record<portal: record<DBusName: string, Interfaces: list<string>>> {
	$in
	| from ini
	| update portal.Interfaces { split row ';' | where { is-not-empty } }
}

def find-xdg-data []: path -> path {
	let query = $in

	$env.XDG_DATA_DIRS? | default [/usr/local/share, /usr/share]
	| prepend ($env.XDG_DATA_HOME? | default ($env.HOME | path join '.local' 'share'))
	| each { path join $query }
	| where { path exists }
	| first
} 

def prefer-portal [
	portal: string
	--exclude: list<string> = []
]: record<preferred: record> -> record<preferred: record> {
	$in
	| update preferred {
		merge (
			['xdg-desktop-portal' 'portals' $'($portal).portal']
			| path join
			| find-xdg-data
			| open
			| get portal.Interfaces
			| where $it not-in $exclude
			| each {|interface| {$interface: $portal}}
			| into record
		)
	}
}

def main []: string -> string {
	{preferred: {
		default: ['hyprland', 'gtk'],
	}}
	| prefer-portal kitty --exclude ['org.freedesktop.impl.portal.Settings']
	| to portals-conf
}
