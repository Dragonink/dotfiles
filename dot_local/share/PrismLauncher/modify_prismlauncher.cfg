#!/usr/bin/env nu

def "from cfg" []: string -> record {
	let tab: table<key: string, value: string> = $in
		| lines --skip-empty
		| split column --number 2 '='
		| rename key value

	mut res = {}
	mut section = null
	for row in $tab {
		let captures = $row.key | parse '[{section}]'
		if ($row.value? == null) and ($captures | is-not-empty) {
			$section = $captures | first | get section
			$res = $res | merge deep {$section: {}}
		} else {
			$res = $res | upsert ([$section, $row.key] | into cell-path) $row.value?
		}
	}

	$res
}

def "to cfg" []: record -> string {
	transpose key value
		| each {|row|
			if ($row.value | describe --detailed | get type) == record {
				[$"[($row.key)]\n", ($row.value | to cfg)]
			} else {
				[$"($row.key)=($row.value)\n"]
			}
		}
		| flatten
		| str join
}

open --raw /dev/stdin
	| from cfg
	| upsert General.WrapperCommand ($env.HOME | path join Games Minecraft wrapper.sh)
	| to cfg
