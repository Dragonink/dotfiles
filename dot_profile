#shellcheck shell=sh

# Define XDG Base Directories
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"

# Make programs use XDG Base Directories
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export GOPATH="$XDG_DATA_HOME/go"
export GOMODCACHE="$XDG_CACHE_HOME/go/mod"
export _JAVA_OPTIONS="${_JAVA_OPTIONS:+$_JAVA_OPTIONS }-Djava.util.prefs.userRoot=$XDG_CONFIG_HOME/java"
export MPLAYER_HOME="$XDG_CONFIG_HOME/mplayer"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export NUGET_PACKAGES="$XDG_CACHE_HOME/NuGetPackages"
export RENPY_PATH_TO_SAVES="$XDG_DATA_HOME/renpy"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export W3M_DIR="$XDG_STATE_HOME/w3m"
export WGETRC="$XDG_CONFIG_HOME/wgetrc"

# Add some locations to the PATH
export PATH="$CARGO_HOME/bin${PATH:+:$PATH}"
export PATH="$HOME/.local/bin${PATH:+:$PATH}"


# Use the GPG agent as the SSH agent
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
	SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
	export SSH_AUTH_SOCK
fi
# Configure pinentry to use the correct TTY
GPG_TTY="$(tty)"
export GPG_TTY
gpg-connect-agent updatestartuptty /bye > /dev/null

# Customize the sudo prompt
SUDO_PROMPT="$(tput setab 1 setaf 7 bold)[sudo]$(tput sgr0) $(tput setaf 6)password for$(tput sgr0) $(tput setaf 5)%p$(tput sgr0): "
export SUDO_PROMPT

# Set Helix as the default editor
if command -v hx > /dev/null; then
	export EDITOR='hx'
fi

# Configure the Carapace completer
export CARAPACE_BRIDGES='zsh,fish,bash'
export CARAPACE_ENV=0 # Do not register *-env functions
export CARAPACE_MATCH=1 # Match is case insensitive


# Update systemd and DBus environment
dbus-update-activation-environment --systemd --all

# Launch Hyprland using UWSM
if command -v uwsm > /dev/null; then
	if uwsm check may-start; then
		exec uwsm start hyprland.desktop
	fi
fi
